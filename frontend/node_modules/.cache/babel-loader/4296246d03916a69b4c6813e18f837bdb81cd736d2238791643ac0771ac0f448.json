{"ast":null,"code":"var _jsxFileName = \"C:\\\\pl\\\\CSE_CU_portfolio\\\\frontend\\\\src\\\\components\\\\ResourcesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResourcesPage = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [file, setFile] = useState(null);\n  const fileInput = useRef(null); // Ref to access the file input\n  const userId = '12345'; // Example user ID; replace with actual user ID\n  const token = 'your_jwt_token_here'; // Example JWT token; replace with actual token\n\n  const handleUpload = async () => {\n    // Check if a file is selected\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', fileInput.current.files[0]); // Get the selected file\n    formData.append('title', title);\n    formData.append('user_id', userId);\n    try {\n      // Make the POST request to upload the file\n      const response = await fetch('http://localhost:8000/resources/upload', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}` // Ensure the JWT is passed in headers\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Upload successful:', data);\n        alert('File uploaded successfully!');\n      } else {\n        console.error('Error uploading resource:', data.message);\n        alert('Error uploading file: ' + data.message);\n      }\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert('Upload failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Resource\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Resource Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInput,\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ResourcesPage, \"hfT2PdDB1nTmMVAvHO1UMy641b8=\");\n_c = ResourcesPage;\nexport default ResourcesPage;\nvar _c;\n$RefreshReg$(_c, \"ResourcesPage\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","ResourcesPage","_s","title","setTitle","file","setFile","fileInput","userId","token","handleUpload","alert","formData","FormData","append","current","files","response","fetch","method","headers","body","data","json","ok","console","log","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","ref","onClick","_c","$RefreshReg$"],"sources":["C:/pl/CSE_CU_portfolio/frontend/src/components/ResourcesPage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nconst ResourcesPage = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const fileInput = useRef(null); // Ref to access the file input\r\n  const userId = '12345'; // Example user ID; replace with actual user ID\r\n  const token = 'your_jwt_token_here'; // Example JWT token; replace with actual token\r\n\r\n  const handleUpload = async () => {\r\n    // Check if a file is selected\r\n    if (!file) {\r\n      alert('Please select a file.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', fileInput.current.files[0]); // Get the selected file\r\n    formData.append('title', title);\r\n    formData.append('user_id', userId);\r\n\r\n    try {\r\n      // Make the POST request to upload the file\r\n      const response = await fetch('http://localhost:8000/resources/upload', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`, // Ensure the JWT is passed in headers\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Upload successful:', data);\r\n        alert('File uploaded successfully!');\r\n      } else {\r\n        console.error('Error uploading resource:', data.message);\r\n        alert('Error uploading file: ' + data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload failed:', error);\r\n      alert('Upload failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload Resource</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Resource Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInput}\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n      />\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourcesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}