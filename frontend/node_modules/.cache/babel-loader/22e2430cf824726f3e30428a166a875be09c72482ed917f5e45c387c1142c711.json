{"ast":null,"code":"var _jsxFileName = \"/Users/arafatsheikh/D_Drive/programming/web_dev/service-technician-finder/frontend/src/components/ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !newPassword) {\n      setError('Please fill out all fields.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8000/reset-password', {\n        email,\n        password: newPassword\n      });\n      if (response.data.success) {\n        setMessage('Password has been reset successfully. You can now log in.');\n        setEmail('');\n        setNewPassword('');\n        setError('');\n\n        // Redirect to login page after 5 seconds\n        setTimeout(() => {\n          navigate('/login'); // Replace '/login' with your login page route\n        }, 5000);\n      } else {\n        setError(response.data.message || 'Error resetting password.');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"/C09JSyjNI4/Hjv7Yg4IUH9SaF8=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","newPassword","setNewPassword","message","setMessage","error","setError","navigate","handleSubmit","e","preventDefault","response","post","password","data","success","setTimeout","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["/Users/arafatsheikh/D_Drive/programming/web_dev/service-technician-finder/frontend/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!email || !newPassword) {\n      setError('Please fill out all fields.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:8000/reset-password', { email, password: newPassword });\n\n      if (response.data.success) {\n        setMessage('Password has been reset successfully. You can now log in.');\n        setEmail('');\n        setNewPassword('');\n        setError('');\n\n        // Redirect to login page after 5 seconds\n        setTimeout(() => {\n          navigate('/login'); // Replace '/login' with your login page route\n        }, 5000);\n      } else {\n        setError(response.data.message || 'Error resetting password.');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Forgot Password</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"Enter your new password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Reset Password</button>\n      </form>\n      {message && <p style={{ color: 'green' }}>{message}</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}